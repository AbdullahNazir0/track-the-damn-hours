// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  name       String
  email      String      @unique
  password   String? 
  provider   String      @default("local") 
  providerId String?     @unique
  tokens     ApiToken[]
  projects   Project[]
  heartbeats Heartbeat[]
  sessions   Session[]
  createdAt  DateTime    @default(now())
}

model ApiToken {
  id        String    @id @default(uuid())
  tokenHash String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  scopes    String[]
  createdAt DateTime  @default(now())
  revokedAt DateTime?
}

model Project {
  id         String      @id @default(uuid())
  user       User        @relation(fields: [userId], references: [id])
  userId     String
  name       String
  rootPath   String?
  heartbeats Heartbeat[]
  sessions   Session[]
  createdAt  DateTime    @default(now())
}

model Heartbeat {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
  timestamp DateTime
  editor    String
  fileName  String?
  language  String?
  meta      Json?
  createdAt DateTime @default(now())
}

model Session {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
  startTime DateTime
  endTime   DateTime
  duration  Int
  createdAt DateTime @default(now())
}
